package com.imajuk.media{    import org.libspark.thread.Thread;    /**     * @author shinyamaharu     */    public class VideoLoadingProgressThread extends Thread     {    	private var loaded : Boolean = false;        private var loadedPer : Number = 0;        private var video : SimpleFLVPlayer;
        private var videoUI : IVideoUI;
        public function VideoLoadingProgressThread(video:SimpleFLVPlayer, videoUI:IVideoUI)        {            super();                        this.video = video;            this.videoUI = videoUI;        }        override protected function run() : void        {        	if (isInterrupted) return;            interrupted(function():void{});        	        	if (loaded)        	   return;        	        	next(videoLoadHandler);        }                private function videoLoadHandler() : void         {        	if (isInterrupted) return;        	        	updateLoadingBar();            if (loaded)               return;                        next(videoLoadHandler);        }                private function updateLoadingBar() : void        {            if (!video)               return;                           if(loaded)                return;                    var l : Number = video.getBytesLoaded();            var t : Number = video.getBytesTotal();            loadedPer = l / t;            loadedPer = (isNaN(loadedPer)) ? 0 : loadedPer;//            Logger.info(2, "loading..  " + l + " / " + t + " " + int(loadedPer * 100) + " %");                         if(loadedPer >= 1)            {            	videoUI.updateLoadingView(1);                loaded = true;            }            else            {            	videoUI.updateLoadingView(loadedPer);            }        }        override protected function finalize() : void        {        }    }}