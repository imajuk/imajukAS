package com.imajuk.render2D.utils{    import fl.motion.easing.Quadratic;    import com.imajuk.motion.TweensyThread;    import com.imajuk.render2D.Render2D;    import org.libspark.thread.Thread;	    /**     * Cameraを移動させるための汎用クラス     * @author shinyamaharu     */    public class CameraNavigateThread extends Thread     {        private var cameraNavigator : CameraTweeningHelper;        private var x : Number;        private var y : Number;        private var radians : Number;        private var scale : Number;        private var easing : Function;
        private var duration : Number;
        private var prop : Object;
        public function CameraNavigateThread(        					render2D : Render2D,        					x : Number = NaN,        					y : Number = NaN,        					radians : Number = NaN,        					scale : Number = NaN,        					easing : Function = null,        					duration:Number = 1)        {            super();            this.x = x;            this.y = y;            this.radians = radians;            this.scale = scale;            this.easing = easing;            this.duration = duration;            if (easing == null)            	this.easing = Quadratic.easeInOut;                        prop = {};            if (!isNaN(x))                prop.x = x;            if (!isNaN(y))                prop.y = y;            if (!isNaN(radians))                prop.radians = radians;            if (!isNaN(scale))                prop.scale = scale;            prop.render = 0;                        cameraNavigator = new CameraTweeningHelper(render2D);        }        override protected function run() : void        {        	if (isInterrupted) return;            interrupted(function():void{});                        var t : Thread = new TweensyThread(cameraNavigator, 0, duration, easing, null, prop);            t.start();            t.join();        }        override protected function finalize() : void        {        }    }}