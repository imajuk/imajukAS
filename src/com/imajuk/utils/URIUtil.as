package com.imajuk.utils {
    /**     * URIに関するユーティリティ     * @author yamaharu     */    public class URIUtil     {        //--------------------------------------------------------------------------        //        //  Class methods        //        //--------------------------------------------------------------------------                /**         * URIに含まれるファイル名を返します.         *          * <p>URIにファイルへのパスが含まれていない場合は<code>null</code>を返します.</p>         *          * @param url ファイル名を調べたいURLを渡します.         * @return ファイル名を返します.         *          * http://imgsrc.jp         * http://www.imgsrc.co.jp         */        public static function getFileName(url:String):String        {            var result:String = url;            var protocol:Array = url.match(/^.+:\/\//g);            //プロトコルの削除            result = url.replace(/^.+:\/\//g, "");            //ディレクトリの削除            result = url.replace(/(.*\/)?/g, "");            //パラメータがあれば削除            result = result.replace(/\?.+/g, "");            //http://www.imajuk.comのようなURLにファイルが含まれないケース            if(protocol != null && protocol.length > 0 && protocol + result == url)            	return null;            	            return (result == "") ? null : result;        }                /**         * URIに含まれるファイルの拡張子を返します.         *          * <p>URIにファイルへのパスが含まれていない場合は<code>null</code>を返します.</p>          * @param url 拡張子を調べたいURLを渡します.         * @return 拡張子名を返します.         */        public static function getFileExtention(url:String):String        {            var fileName:String = getFileName(url);            var pattern:RegExp = /.+\./;            if(pattern.test(fileName))                return fileName.replace(pattern, "");//			else//			     trace("URIUtil : ["+url + "]の拡張子を解析できませんでした.");            return null;        }        public static function getDomain(url : String) : String        {            var result : String = url;            var protocol : Array = url.match(/^.+:\/\//g);            // プロトコルの削除            result = url.replace(/^.+:\/\//g, "");            return protocol + String(result.split("/")[0]);        	        }    }
}
