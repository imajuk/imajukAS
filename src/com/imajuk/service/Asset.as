package com.imajuk.service {
    import flash.display.LoaderInfo;	
    import com.imajuk.commands.loading.LoadCommandLeaf;	    /**     * PreLoaderによってロードされたオブジェクトにアクセスするためのクラス.     *      * <p>Asset gives you to access content that loaded PreLoader.</p>     *      * @author	yamaharu     * @see		PreLoader     */    public class Asset     {        //--------------------------------------------------------------------------        //        //  Constructor        //        //--------------------------------------------------------------------------                /**         * コンストラクタ.         */        public function Asset(loadCommand:LoadCommandLeaf)         {            command = loadCommand;        }        //--------------------------------------------------------------------------        //        //  Variables        //        //--------------------------------------------------------------------------                /**         * @private         */        private var command:LoadCommandLeaf;        //--------------------------------------------------------------------------        //        //  properties        //        //--------------------------------------------------------------------------                /**         * ロードされたオブジェクトを返します.         *          * <p>リクエストURLの拡張子によって返されるオブジェクトの方が変わります.         * <dl>         * 	<dt>ロード対象が以下のものの場合<code>MovieClip</code>オブジェクトを返します.         * 		<dd>.swf</dd>         * 	</dt>         * 	<dt>ロード対象が以下のものの場合<code>Bitmap</code>オブジェクトを返します.         * 		<dd>.jpg, .png, .gif</dd>         * 	</dt>         * 	<dt>ロード対象が以下のものの場合<code>XML</code>オブジェクトを返します.         * 		<dd>.xml<br/>         * ------------&lt;&lt;以下のファイル形式は今のところ未実装です&gt;&gt;-------------         *      </dd>         *  </dt>         * 	<dt>ロード対象が以下のものの場合<code>String</code>オブジェクトを返します.         * 		<dd>.txt, .csv</dd>         *  </dt>         * 	<dt>ロード対象が以下のものの場合<code>BytesArray</code>オブジェクトを返します.         * 		<dd>.bin, .zip</dd>         * 	</dt>         * </dl>         * </p>         * <p>returns a asset loaded.</p>         * <p>the type of content is changed with extention of URL included loading request.         * 	<dl>         * 		<dt>returns MoieClip object, if extention is as follows :         * 			<dd>.swf</dd>         * 		</dt>         * 		<dt>returns Bitmap object, if extention is as follows :         * 			<dd>.jpg, .png, .gif</dd>         * 		</dt>         * 		<dt>returns XML object, if extention is as follows :         * 			<dd>.xml<br/>         * ------------&lt;&lt;caution : these extention of follow doesn't implement&gt;&gt;-------------         *          </dd>         *      </dt>         * 		<dt>returns String object, if extention is as follows :         * 			<dd>.txt, .csv</dd>         * 		</dt>         * 		<dt>returns BytesArray object, if extention is as follows :         * 			<dd>.bin, .zip</dd>         * 		</dt>         * </dl>         * </p>         */        public function get content():*        {            return command.content;        }        /**         * ロードされたオブジェクトののLoaderInfoオブジェクトを返します.         *          * <p>returns LoaderInfo of loaded content.</p>         */        public function get loaderInfo():LoaderInfo        {            return command.loaderInfo;        }
                /**         * このアセットのロードが終了しているかどうかを返します.         */
        public function get isComplete():Boolean
        {            return (loaderInfo.bytesLoaded > 0) && (loaderInfo.bytesLoaded == loaderInfo.bytesTotal);
        }    }
}
