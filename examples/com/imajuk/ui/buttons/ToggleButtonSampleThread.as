package com.imajuk.ui.buttons{    import com.imajuk.behaviors.ColorBehavior;    import com.imajuk.behaviors.ImageSwapBehavior;    import com.imajuk.constructions.AppDomainRegistry;    import com.imajuk.service.AssetLocation;    import com.imajuk.service.IAssetLocation;    import com.imajuk.service.PreLoader;    import com.imajuk.service.PreLoaderThread;    import com.imajuk.ui.buttons.fluent.BehaviorContext;    import com.imajuk.ui.buttons.group.ButtonGroup;    import org.libspark.thread.Thread;    import flash.display.Sprite;    import flash.events.MouseEvent;    import flash.net.URLRequest;    /**     * @author shinyamaharu     */    public class ToggleButtonSampleThread extends Thread     {        private var timeline : Sprite;        private var asset : Sprite;
        public function ToggleButtonSampleThread(timeline:Sprite)        {            super();            this.timeline = timeline;        }        override protected function run() : void        {        	next(loadAssets);        }                private function loadAssets() : void        {            var a : IAssetLocation =                 new AssetLocation()                    .add(                        new URLRequest("toggleButtonSampleAsset.swf"),                         function(d : Sprite):void                        {                            AppDomainRegistry.getInstance().resisterAppDomain(d);                            asset = timeline.addChild(d) as Sprite;                        });                        var preloader : PreLoader = new PreLoader();            var t : Thread = new PreLoaderThread(preloader, a);            t.start();            t.join();                        next(buildButton);        }                private function buildButton() : void        {            //=================================            // アセットから名前に"closeBtn"を含むDisplayObjectを            // 探してFlatColorButtonでラップする            //=================================            var group:ButtonGroup = AbstractButton.wrapByName(asset, "closeBtn")                .context(BehaviorContext.ROLL_OVER_OUT)                .behave(ColorBehavior.createTint(ColorConfig.RG_RED, 1, "pic", ColorConfig.RG_CREAM))                .context(BehaviorContext.SELECT_UNSELECT)                .behave(ImageSwapBehavior.create("select"))                .behave(ColorBehavior.createTint(ColorConfig.RG_CREAM, 1, "pic")) as ButtonGroup;                            //3つのボタンを排他的に機能させる
            group.isXOR = true;                        group.addEventListener(MouseEvent.MOUSE_DOWN, function() : void            {                trace(group.selectedIndex);            });
                        //=================================
            // single
            //=================================            var single:IButton =                 AbstractButton.wrapByName(asset, "single")                     .context(BehaviorContext.ROLL_OVER_OUT)                    .behave(ColorBehavior.createTint(ColorConfig.RG_RED, 1, "pic", ColorConfig.RG_CREAM))                    .context(BehaviorContext.SELECT_UNSELECT)                    .behave(ImageSwapBehavior.create("select"))                    .behave(ColorBehavior.createTint(ColorConfig.RG_CREAM, 1, "pic"));                            single.selectable = true;            single.toggle = true;
        }        override protected function finalize() : void        {        }    }}