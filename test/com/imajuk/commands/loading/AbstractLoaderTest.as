package com.imajuk.commands.loading{	import flash.system.LoaderContext;	import com.imajuk.testImajuk;    		import flash.net.URLRequest;        import flash.events.Event;	    import flash.display.*;    import org.libspark.as3unit.after;    import org.libspark.as3unit.assert.*;    import org.libspark.as3unit.before;    import org.libspark.as3unit.test;        use namespace test;    use namespace before;    use namespace after;    use namespace after;    use namespace testImajuk;    internal class AbstractLoaderTest extends Sprite    {        before function setupSample():void        {        }        test function waitInitialize_true():void        {            var a_Loader:AbstractLoader = new AbstractLoader(Loader, false);            //デフォルトはfalse            assertFalse(a_Loader.waitInitialize);                        a_Loader.addEventListener(Event.COMPLETE, async(function(event:Event):void            {                assertEquals("complete", a_Loader.testImajuk::eventType);            }));                        a_Loader.load(new URLRequest("testAsset/testAsset.swf"), new LoaderContext());        }        test function waitInitialize_false():void        {            var a_Loader:AbstractLoader = new AbstractLoader(Loader, false);            a_Loader.waitInitialize = true;            assertTrue(a_Loader.waitInitialize);                        a_Loader.addEventListener(Event.INIT, async(function(event:Event):void            {                assertEquals("init", a_Loader.testImajuk::eventType);            }));                        a_Loader.load(new URLRequest("testAsset/testAsset.swf"), new LoaderContext());        }                after function teardownSample():void        {        }    }}